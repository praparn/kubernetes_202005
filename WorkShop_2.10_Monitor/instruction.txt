Instructor for Monitor Kubernetes Farm with Prometheus and Grafana:

====================================================
Part1: Create Application and Service for Operate
====================================================
1. (Master) Create HPA by command:
	kubectl create -f https://raw.githubusercontent.com/praparn/kubernetes_202005/master/WorkShop_2.8_HPA_WorkShop/webtest_deploy_hpa.yml
	 
2. (Master) Check Pods status by command:
	kubectl get deployment/webtest -o wide
	kubectl get svc/webtest -o wide

3. (Master) Test Access by url:
	curl http://<Any Public IP of Node>:32500

====================================================
Part2: Install Prometheus-operator
====================================================
1. (Master) Create CRD for Prometheus-operator by command:
	kubectl create -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.37/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
	kubectl create -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.37/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
	kubectl create -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.37/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
	kubectl create -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.37/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
	kubectl create -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.37/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
	kubectl create -f https://raw.githubusercontent.com/coreos/prometheus-operator/release-0.37/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml

2. (Master) Install Prometheus-operator by command:
	kubectl create namespace monitoring
	helm install prometheus-operator stable/prometheus-operator --set prometheusOperator.createCustomResource=false --namespace monitoring

2. (Master) Check result of pods by commands:
	watch kubectl get pods -n monitoring

3. (Master) Check CustomerResourceDefinition by command:
	kubectl get CustomResourceDefinition
	############################################
	*Remark:  Expect to found record below
prometheuses.monitoring.coreos.com            2019-03-09T17:06:47Z
prometheusrules.monitoring.coreos.com         2019-03-09T17:06:47Z
servicemonitors.monitoring.coreos.com         2019-03-09T17:06:47Z
alertmanagers.monitoring.coreos.com           2019-03-09T17:17:05Z
	############################################

*Remark: In case you need to roll-back this case: (Wait 5 min before start next deploy)
helm delete prometheus-operator
kubectl delete crd prometheuses.monitoring.coreos.com
kubectl delete crd prometheusrules.monitoring.coreos.com
kubectl delete crd servicemonitors.monitoring.coreos.com
kubectl delete crd podmonitors.monitoring.coreos.com
kubectl delete crd alertmanagers.monitoring.coreos.com
kubectl delete crd thanosrulers.monitoring.coreos.com
kubectl delete namespace monitoring
	
4. (Master) Check pods name and service name by command: 
	kubectl get pods -n=monitoring				==> Record name of grafana, prometheus pods
	kubectl get svc -n=monitoring

5. (Master) Set port-forward for Grafana's dashboard
	kubectl port-forward --address 0.0.0.0 pods/<Grafana pods's name> 3000:3000 -n=monitoring
	(Ex: kubectl port-forward --address 0.0.0.0 pods/grafana-5d8f767-25lx5 3000:3000 -n=monitoring)

	*Optional: For run from local machine
	kubectl --kubeconfig ./adminconfig.conf port-forward <Grafana pods's name> 3000 -n=monitoring
	(Ex: kubectl --kubeconfig ./adminconfig.conf port-forward --address 0.0.0.0 pods/prometheus-operator-grafana-544db856cf-zl2dp 3000:3000 -n=monitoring)

5. (local) Open browser and open granfana dashboard by url http://<Public IP of Master>:3000
	Username: admin
	Password: prom-operator
	*Remark: check by command: 
	kubectl get secret --namespace monitoring prometheus-operator-grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
	kubectl get secret --namespace monitoring prometheus-operator-grafana -o jsonpath="{.data.admin-user}" | base64 --decode ; echo

====================================================
Part3: Monitoring with Lens
====================================================
1. (Master) Show KubeConfig by command:
	more ~/.kube/config		==> Copy 
	----------------Example-----------------------

apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpN
QjRYRFRJd01ETXpNVEUwTXpReU1Gb1hEVE13TURNeU9URTBNelF5TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTk5HCnJTSUpm
VnJNNnpwRlNlUjRuMFNURzlkL3BYdjYwZSthR0QxVjlIbGZ1QTc2WGZXRFdxaithdEJGcVBxMGVZNE4KZFg2SDI0SlRNY1lCUHZOQmpPNnpQeHB3cFVUelVab0pWeXdaOUtsY3pYWERTZnFGZFRPbG9lOGhKbWpRQjQxegpK
bUtnTmh0dXBVR3graG1zM0FDNFAwblFnR2hUaE80VG5JYUZKUkNBM2J5M0ZDSmY5R3lOeDAzRmw5aWRyclpPClRUWlRQWnRMRFI3R3JpRVV1QmkvYnE0VlMvaHU0REp1Qk9KcnExWnh1NjVSTWQ4N24vblppd3BWYmoyUHNP
ZzgKbXhRWU9nYWgrUVJYclNWSXFmREF3Sm40aEVZc01acFhmNytzOFlqUU00S0NBTVM0MEJ2UkJBb1BFaG5zUjNwVApCZ0pkN0VIR0xoL2FUbGRtVzRrQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0Ex
VWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFHL0lkZXdSMVpTOEJ5aUVudk9xOE5meU55amsKcm0vVWgvcUh4NkQxWTR2RjlhMTJhakIzaFZuRkVIVUorNjNoZkpONWxJWTRqQVZ0ZjA4YmVo
N3o4ZFVSQ3ArbgpSR3RVVnJWM2ZBZjhtblNHRjJjZmx4aEJzUEErZy9sUXBTQnA5S0t1amxQY1NCdmpMTWtHQ0FBTDh4L0RMb2lRCkhqSTVOclRqbmhsMmtremdFaWJESEtiZlljL05iRlgxQkRZZmNlODMwVDc1UWoxV3BK
T1RRZjVqZERuODgxRmIKOFI2RitGVlpjWmg4YnNSMHBQZ0Z5ZEpldldDY2VJNzFkK0ZQQVRSbTBQRFFHQ1VDeEkvcXg3bFJ5VFV6d2ZOMApEdTRjT3JocUtiNDhPaGdBVHBPc1pqNlBrYWtmbnZLZUp2OU9INmVwTG1FRFhh
NkplMkhseFBRNzB6UT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    server: https://10.0.1.147:6443
  name: TrainingAdvanceDockerwithK8STeacher
contexts:
- context:
    cluster: TrainingAdvanceDockerwithK8STeacher
    user: kubernetes-admin
  name: kubernetes-admin@TrainingAdvanceDockerwithK8STeacher
current-context: kubernetes-admin@TrainingAdvanceDockerwithK8STeacher
kind: Config
preferences: {}
users:
- name: kubernetes-admin
  user:
    client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM4akNDQWRxZ0F3SUJBZ0lJTTNqdCtZdlpxMll3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp
1WlhSbGN6QWVGdzB5TURBek16RXhORE0wTWpCYUZ3MHlNVEF6TXpFeE5ETTBNalJhTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUl
CSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXpyWXptWVJoUUFpbmoyWmkKNUlxOWVsaU9paE1xcWNmalVTaW1NZkxsR2xyL2tEb2NKWGxrKzI5QTdJc1dZdlFoajFYanlNQVpaK1Q5Ymp5WQpPd1J
Ib3lZd2MyNnFrdDdJaFdDMkdqbWRiVzNSU0hMcmZOaTJKOTBWVmdGWXljcGNoU3NQcWgrbE9LWkgvWk9SCkNMdlhDaTV6MURJRjIzSjVxOFRFNkRIUVlDQ3M3UnZ6SFhYWVJrL2NFamYvQkxubW44NG1wek96RVU3dU9zTms
KWEpteXdsc1dWRXo4d1B1Q3poU0o4TkNsQ2pmSzNJRFNLa2VvcTAwcitxbUxVSFdjNjdqd25VdndoenA3QWNnWgpEWHphbk9qdStLa1hyNFcwZlBBM2hFRFdMb3RTdzF6OVFyQTYrZTIwZFBBZGt4TDdMdmxESUF0TXQwMW1
5RnE4CnczZFhud0lEQVFBQm95Y3dKVEFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIbDNyMGltaENzcFBwVTNRbDhFZVY4WDBuSjF
nSTFsQm5XRAp5ejI4MkhkU3o0M2szNUxnVmVpRS9sUU5PTTZsOEVjdE5hL3VVWU16bDJMd3VqanNEdmpUSklmTlJ2SDUxZEl6CjhDM25zL0tmYW8rZU1senY3UzFpVmxkaGtGeDBtZmFSZGhSVFp1cXVtcE1UcWIxdjN5dVg
4TUFhNkJDTkFobXMKSm1OUmVvNm96UkVNc21XSTdnQWVJSEhiNHc5WmtwWG1FdTlTSFNzZ0NEVHFSWU5rOWtGYXhla0w4WGgwSzloVgpzSnVFMzNPTkJtTVhTcGF3MkhLTnJaU3VsWUdjR0ZPVURUZDdkN2x0Zjl2MlhaTFM
yL2g4aDhBcHFDV01iK3NMCjdSTW5ndldzdlZ5RGE3YVlVWnNnN2xqVGNpUmVRMFYrNENVUC9BR2xLRUtVcjB4TzZVYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBenJZem1ZUmhRQWluajJaaTVJcTllbGlPaWhNcXFjZmpVU2ltTWZMbEdsci9rRG9jCkpYbGsrMjlBN0lzV1l
2UWhqMVhqeU1BWlorVDlianlZT3dSSG95WXdjMjZxa3Q3SWhXQzJHam1kYlczUlNITHIKZk5pMko5MFZWZ0ZZeWNwY2hTc1BxaCtsT0taSC9aT1JDTHZYQ2k1ejFESUYyM0o1cThURTZESFFZQ0NzN1J2egpIWFhZUmsvY0V
qZi9CTG5tbjg0bXB6T3pFVTd1T3NOa1hKbXl3bHNXVkV6OHdQdUN6aFNKOE5DbENqZkszSURTCktrZW9xMDByK3FtTFVIV2M2N2p3blV2d2h6cDdBY2daRFh6YW5PanUrS2tYcjRXMGZQQTNoRURXTG90U3cxejkKUXJBNit
lMjBkUEFka3hMN0x2bERJQXRNdDAxbXlGcTh3M2RYbndJREFRQUJBb0lCQUVZQ1IyK1MraXpwd1hZNwp3dnFNVXFnQkhpVjlZRkdvTlVEamQ0WXJNWlMvaFJhZjE3Q0pjTDRIYkFHeENaL3g5dnZJcHlEeWpxZzFVZS9uCjd
kYnZHQ1FWWnd0eFM2djZjQWRjUGRDYitzbDVEQXh4ZjNnRkhZeGF3RU1rcWFHT084K09TZnZnUStEdjBDbjkKdEgwMHdSdmRwN1VTVEJHS3I5S1JEZTltRDZDK1ZHdTI1ekh6M2FlRGY0WGJ1SDd6NmhldWV3aysrV0dPV3U
0Qgo1aFNndDBtUlhHTGdKWDZCVmtJeW5vNTNGTXpWYzFYWC9wbjh0b0pUM3JrbW4vVytEMEppeS9YcEFva2tKbmlkCjVqVS9ZL0NXQkcyZTFHb0dxeHR6dTNrWWtDQ1hPcnd5Z1JWSXdiOGpVaGh3T0xMZUcwWGEvTFZLckd
KVEJSc24KaEVTaHhDRUNnWUVBN1p1UElhTjdBSzk1OUtwMDlkNWVMWmxLSndpYkFQNHh5aWNJOFl1a0lVS1RmNnMyYVp5Zgpsd0dLQnREQy8xVklDMUpVa0ZnZGZSS01XM1FlQXRBc21pUGJvcUxVS25oZVZ6ZDFEN3UwTWh
nZDNyQXgvWlhJCktOZ3hXaUNDcmxUcitLbzJSWGRYKytJSVJNUnFRdElXQUkvUE5kblhST3BkQnZOOE1pd01VS01DZ1lFQTNyWm8KWW5lWGVSenZZWm1NdFZhL28wMEFuMWNRbldaN1Y0TkZsc1dmd21BVDZ5RkRJdW1ZNXV
vQ3hxZE04OFJwWnh1dwpTZXJ5WTFhUnB5MWwxQng1SGhaUXdJV2s3eU9XNVgvL1hMRzVtdEVyVmFDWE1DU1hzOEdML2F5V3NsVVY3TnZICk5ITzIxVTdzSEk3ZE9GTXp0MFFSbmY2bjVwNU56WnM5ZmlJcXdOVUNnWUVBM0N
XaUl1ZW1Rb2RTOW9hc1lWV0wKYXJJNVN4c2xDbkY2VGpPR2pNMzEzejhoREV2azJVdGRiZnJtR05SNXB6c3J5aG1ZOGpoQjhpMHFVRjJ3cEtpZQplcDQ0bEdKTE02SmN2bkJLaks0OEVhSFlvd2dhK1RvNnZ1VTRMS29zaWp
0eWV1Mng1UURqU3lRc3h4STQ1ZnBpCm1saWtBdC80SFFrTDhqSE1ZMnYrYVFNQ2dZQmR6SkYyTjB3eWxEODE2Z2ZiTUNnU1RSSWdDZmxUY2FBdElYcWoKbjZSRHAxZDhSa3dTWGpRcHZSRmlQWUFwZ3VXcHFYMjhCQm9HUUt
XanRYa1h0czVFSDczdTk5cVpaWEhlUXVSNApVOW9LSEdLVjg4YjVYZEFPdzB1RWtiWCtjZHVFSUtScnNQaW1LbEZEVGVCYUlxQzdaUTNPYnp5ajRyUitEZzMrCkc4SEo2UUtCZ0ZmczdSa2RSeWJDZkxuY3NLVjg1TXNPV3l
WK3BXZ0FFM0VtSTJFRVJwbTQxM2FlMk0ya1Zsa1IKYnlvVjhuNXZDZ3FGTW5EaHNUZW9lSWc5WG0xY1NRKzlnNTlrWjRUVFhIU3F5NUx5dEhnQ0FXbVdWeUwrZGF3bgo0Mm1oZ2NHSncvdGFEZDVDeWVVeVNzcVhtTi9WZUN
yaksvbnNPbTM3VDd0cGJZbnpsRVFNCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==

	----------------Example-----------------------
2. (Local) Open Lens Application

3. (Local) Add Cluster ==> Choose "Custom"

4. (Local) Pase "KubeConfig" and change ip address to public ip address of master

5. (Local) Add Cluster