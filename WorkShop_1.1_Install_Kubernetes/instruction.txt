Link for download:
1. Check LABSheet.xlsx for check information about your machine and your "docker_lab" (For MAC OS X) or "docker_lab.ppk" (For Windows)
2. Check Document for connect to your AWS
3. Test docker command by running: 
    docker version
    docker run hello-world
    kubectl version --client=true

4. Clone workshop to aws machine by command: 
    cd ~/
    git clone https://github.com/praparn/kubernetes_202005.git

5. Enable module for IPVS by command:
	sudo su -
	cp /etc/modules /etc/modules_backup
	echo "" > /etc/modules
    echo "ip_vs" >> /etc/modules
    echo "ip_vs_rr" >> /etc/modules
    echo "ip_vs_wrr" >> /etc/modules
    echo "ip_vs_sh" >> /etc/modules
    echo "nf_conntrack_ipv4" >> /etc/modules
	reboot
    *After reboot check modprobe*
    sudo lsmod | grep -e ip_vs -e nf_conntrack_ipv4

6. Initial kubernetes by command:
    sudo su -
    kubeadm init --config /home/ubuntu/kubernetes_202005/WorkShop_1.1_Install_Kubernetes/kubeadm-init-basic.yaml
    exit

7. Setup credential for regular user by command:
    cd ~/
   	mkdir -p $HOME/.kube
    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  	sudo chown $(id -u):$(id -g) $HOME/.kube/config
	kubectl taint nodes --all node-role.kubernetes.io/master-

8. Install network component by command:
    kubectl apply -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml
    watch kubectl get pods --all-namespaces

9. Check IPVS mode on kube-proxy by command:
    kubectl get pods -n kube-system ==> Record kube-proxy name
    kubectl logs kube-proxy-<XXXX> -n kube-system

10. Check Feature-Gate Configuration:
    Controller Server: ps -ef | grep kube-controller-manager | grep feature-gate
    API Server: ps -ef | grep kube-apiserver | grep feature-gate
    Scheduler: ps -ef | grep kube-scheduler | grep feature-gate
    Kubelet: ps -ef | grep /usr/bin/kubelet | grep feature-gate

11. Check Existing Certificate and CSR:
    sudo find /etc/kubernetes/pki/ -type f -name "*.crt" -print|egrep -v 'ca.crt$'|xargs -L 1 -t  -i bash -c 'openssl x509  -noout -text -in {}|grep After'
    kubectl get csr

12. Test deploy application by command:
    kubectl run webtest --image=labdocker/nginx:http2 --port=443
    kubectl get pods -o wide
    kubectl expose pods webtest --target-port=443 --type=NodePort
    kubectl get svc -o wide                                               ==> Record Public Port
    curl ifconfig.co

13. Test access web endpoint by command:
    https://<Public IP>:<Port>
    or
    curl https://<Public IP>:<Port> -v -k

14. Clear up lab by command:
    kubectl delete pods/webtest
    kubectl delete svc/webtest

15. Now all workshop is on "/home/ubuntu/kubernetes_202005"


*Remark: In case you need to reinitial all this lab again please kindly following command below (*Warnning: This will reset all lab that you had been operate before)
    sudo su -
    kubeadm reset           ==> Answer 'y'
    sudo rm -rf /var/lib/etcd
    docker system prune -af  ==> Answer 'y'